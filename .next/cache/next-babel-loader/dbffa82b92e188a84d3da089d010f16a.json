{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\decka\\\\Desktop\\\\SBC2020\\\\mentor-matching\\\\pages\\\\startup\\\\[startupid].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport useSWR from 'swr';\nimport { useRouter } from 'next/router';\n\nconst MentorList = () => {\n  const Router = useRouter();\n  const API_URL = `/api/mentors?startup=${Router.query.startupid}`;\n\n  const fetcher = API_URL => fetch(API_URL).then(r => r.json());\n\n  const {\n    data,\n    error,\n    isValidating,\n    mutate\n  } = useSWR(API_URL, fetcher);\n  console.log({\n    data\n  }); // if (isValidating) return <div>Fetching data...</div>;\n  // // If an error occured, show an error message\n  // if (error) return <div>Failed to load.</div>;\n  // // If there were no mentors found, show a message that says so\n\n  if (data.length === 0) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 33\n    }\n  }, \"No mentors found.\"); // // Otherwise return a list of mentors and a button to manually refetch the mentors.\n  // I know this is incorrectly mapping through, just trying to access the records from the API\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, data.map(mentor => __jsx(\"li\", {\n    key: mentor.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, mentor.fields[`Mentor Name`]))), __jsx(\"button\", {\n    type: \"button\",\n    onClick: mutate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Refresh Data\")));\n};\n\nexport default MentorList;","map":{"version":3,"sources":["C:/Users/decka/Desktop/SBC2020/mentor-matching/pages/startup/[startupid].js"],"names":["React","fetch","useSWR","useRouter","MentorList","Router","API_URL","query","startupid","fetcher","then","r","json","data","error","isValidating","mutate","console","log","length","map","mentor","id","fields"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAMG,OAAO,GAAI,wBAAuBD,MAAM,CAACE,KAAP,CAAaC,SAAU,EAA/D;;AACA,QAAMC,OAAO,GAAIH,OAAD,IAAaL,KAAK,CAACK,OAAD,CAAL,CAAeI,IAAf,CAAqBC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAA3B,CAA7B;;AAEA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,YAAf;AAA6BC,IAAAA;AAA7B,MAAwCd,MAAM,CAACI,OAAD,EAAUG,OAAV,CAApD;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,IAAAA;AAAF,GAAZ,EANuB,CAQvB;AACA;AACA;AACA;;AACA,MAAIA,IAAI,CAACM,MAAL,KAAgB,CAApB,EAAuB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP,CAZA,CAavB;AAEA;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,CAACO,GAAL,CAAUC,MAAD,IACR;AAAI,IAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBD,MAAM,CAACE,MAAP,CAAe,aAAf,CAArB,CADD,CADH,CADF,EAME;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEP,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CADF,CADF;AAcD,CA9BD;;AAgCA,eAAeZ,UAAf","sourcesContent":["import React from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport useSWR from 'swr';\r\nimport { useRouter } from 'next/router';\r\n\r\nconst MentorList = () => {\r\n  const Router = useRouter();\r\n  const API_URL = `/api/mentors?startup=${Router.query.startupid}`;\r\n  const fetcher = (API_URL) => fetch(API_URL).then((r) => r.json());\r\n\r\n  const { data, error, isValidating, mutate } = useSWR(API_URL, fetcher);\r\n  console.log({ data });\r\n\r\n  // if (isValidating) return <div>Fetching data...</div>;\r\n  // // If an error occured, show an error message\r\n  // if (error) return <div>Failed to load.</div>;\r\n  // // If there were no mentors found, show a message that says so\r\n  if (data.length === 0) return <div>No mentors found.</div>;\r\n  // // Otherwise return a list of mentors and a button to manually refetch the mentors.\r\n\r\n  // I know this is incorrectly mapping through, just trying to access the records from the API\r\n  return (\r\n    <div>\r\n      <div>\r\n        <ul>\r\n          {data.map((mentor) => (\r\n            <li key={mentor.id}>{mentor.fields[`Mentor Name`]}</li>\r\n          ))}\r\n        </ul>\r\n        <button type='button' onClick={mutate}>\r\n          Refresh Data\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentorList;\r\n"]},"metadata":{},"sourceType":"module"}
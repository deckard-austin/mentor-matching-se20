{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\decka\\\\Desktop\\\\SBC2020\\\\mentor-matching\\\\pages\\\\startup\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport useSWR from 'swr';\nconst API_URL = '../api/mentors.js';\n\nconst fetcher = API_URL => fetch(API_URL).then(r => r.json());\n\nconst MentorList = () => {\n  const {\n    data,\n    error,\n    isValidating,\n    mutate\n  } = useSWR(API_URL, fetcher);\n  if (isValidating) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 28\n    }\n  }, \"Fetching data...\"); // If an error occured, show an error message\n\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, \"Failed to load.\"); // If there were no mentors found, show a message that says so\n\n  if (data.length === 0) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 33\n    }\n  }, \"No mentors found.\"); // Otherwise return a list of mentors and a button to manually refetch the mentors.\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, data.map(mentor => __jsx(\"li\", {\n    key: mentor.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, mentor.fields[Name]))), __jsx(\"button\", {\n    type: \"button\",\n    onClick: mutate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Refresh Data\")));\n};\n\nexport default MentorList;","map":{"version":3,"sources":["C:/Users/decka/Desktop/SBC2020/mentor-matching/pages/startup/index.js"],"names":["React","fetch","useSWR","API_URL","fetcher","then","r","json","MentorList","data","error","isValidating","mutate","length","map","mentor","id","fields","Name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAEA,MAAMC,OAAO,GAAG,mBAAhB;;AACA,MAAMC,OAAO,GAAID,OAAD,IAAaF,KAAK,CAACE,OAAD,CAAL,CAAeE,IAAf,CAAqBC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAA3B,CAA7B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,YAAf;AAA6BC,IAAAA;AAA7B,MAAwCV,MAAM,CAACC,OAAD,EAAUC,OAAV,CAApD;AACA,MAAIO,YAAJ,EAAkB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP,CAFK,CAGvB;;AACA,MAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP,CAJY,CAKvB;;AACA,MAAID,IAAI,CAACI,MAAL,KAAgB,CAApB,EAAuB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP,CANA,CAOvB;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACK,GAAL,CAAUC,MAAD,IACR;AAAI,IAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBD,MAAM,CAACE,MAAP,CAAcC,IAAd,CAArB,CADD,CADH,CADF,EAME;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEN,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CADF,CADF;AAcD,CAtBD;;AAwBA,eAAeJ,UAAf","sourcesContent":["import React from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport useSWR from 'swr';\r\n\r\nconst API_URL = '../api/mentors.js';\r\nconst fetcher = (API_URL) => fetch(API_URL).then((r) => r.json());\r\n\r\nconst MentorList = () => {\r\n  const { data, error, isValidating, mutate } = useSWR(API_URL, fetcher);\r\n  if (isValidating) return <div>Fetching data...</div>;\r\n  // If an error occured, show an error message\r\n  if (error) return <div>Failed to load.</div>;\r\n  // If there were no mentors found, show a message that says so\r\n  if (data.length === 0) return <div>No mentors found.</div>;\r\n  // Otherwise return a list of mentors and a button to manually refetch the mentors.\r\n  return (\r\n    <div>\r\n      <div>\r\n        <ul>\r\n          {data.map((mentor) => (\r\n            <li key={mentor.id}>{mentor.fields[Name]}</li>\r\n          ))}\r\n        </ul>\r\n        <button type='button' onClick={mutate}>\r\n          Refresh Data\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentorList;\r\n"]},"metadata":{},"sourceType":"module"}